package sec01.ex01;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class MemberDAO {
	// 필드
	private Connection conn = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null; // 조회 후 결과를 담을 객체
	private DataSource ds = null; // 책에선 dataFactory라는 변수명

	// 생성자
	public MemberDAO() {
		try {
			Context context = new InitialContext();
			ds = (DataSource) context.lookup("java:/comp/env/jdbc/JNDI_MYSQL"); // context.xml에 resourse에 설정해둔 name과 매칭된
																				// 객체를 생성하고 반환한다.

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 회원 등록 (C)
	public void addMember() {

	}

	// 전체 회원 조회 (R)
	public List<MemberBean> listMembers() {

		List<MemberBean> list = new ArrayList<>();

		try {
			// DB 커넥션 연결
			conn = ds.getConnection();
			
			// 최근 가입일 순으로 회원 조회
			String sql = "select * from t_member order by joinDate desc";
			
			// 쿼리 전송 위한 객체 생성
			pstmt = conn.prepareStatement(sql);
			
			// 쿼리 전송 후 결과 받을 객체(rs)에 저장 - db에 있는 회원 테이블 정보
			rs = pstmt.executeQuery();
			
			while(rs.next()) { // 결과를 셍성할 때 처음과 마지막은 default값으로 만들기 때문에 rs.next()를 써줘야 데이터 조회가 가능하다(while의 조건이 true이니까 실행)
				// 조회한 회원 정보를 MemberBean 객체의 속성에 저장
				MemberBean VO = new MemberBean();
				VO.setId(rs.getString("id"));
				VO.setPwd(rs.getString("pwd"));
				VO.setName(rs.getString("name"));
				VO.setEmail(rs.getString("email"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
