/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-15 05:26:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import sec01.ex01.MemberDAO;
import sec01.ex01.MemberBean;

public final class member3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("sec01.ex01.MemberDAO");
    _jspx_imports_classes.add("sec01.ex01.MemberBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("    <!-- id가 m인 MemberBean 객체를 생성 -->\r\n");
      out.write("    <!-- == MemberBean m = new MemberBean(); -->\r\n");
      out.write("    ");
      sec01.ex01.MemberBean m = null;
      m = (sec01.ex01.MemberBean) _jspx_page_context.getAttribute("m", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (m == null){
        m = new sec01.ex01.MemberBean();
        _jspx_page_context.setAttribute("m", m, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("    <!-- jsp:setProperty name=\"userBean에서 지정한 id값\"\r\n");
      out.write("    Property = setxxx() 메서드 사용 위한 멤버 변수 이름\" value= \"멤버 변수에 지정한 값\" -->\r\n");
      out.write("    <!-- request.getParameter() - 사용자 요청이 있을 때 해당 name에 설정된 value를 반환함 -->\r\n");
      out.write("    <!-- value 속성을 이용한 방법 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("     <!-- 회원 가입창에서 전달된 매개변수 이름과 속성 이름이 같으면 같은 이름으로 값을 설정 -->\r\n");
      out.write("     <!-- param 속성을 이용한 방법 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!-- value, param을 안 적어도 property가 속성의 getter, setter값이 있는지 찾고 인지값을 있는지 매핑을 해서 찾는다 -->\r\n");
      out.write("    <!-- 회원 가입창에서 전달받은 매개변수 이름이 일치하는 useBean 속성에 자동으로 값을 설정 -->\r\n");
      out.write("    <!-- value, parm 속성 사용하지 않고 값 실행하는 방법1 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!-- value, parm 속성 사용하지 않고 값 실행하는 방법2 -->\r\n");
      out.write("    <!-- 1. 회원 가입창에서 전달받은 매개변수 이름과 빈 속성을 비교 \r\n");
      out.write("    	 2. 동일한 매개변수 이름과 빈 속성의 이름이 있다면 자동으로 매갸변수로 넘어온 값을 실행\r\n");
      out.write("    -->\r\n");
      out.write("     ");
      out.write("\r\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("m"), request);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>member.jsp(회원 등록창)</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<table align=\"center\" width=\"100%\">\r\n");
      out.write("		<tr align=\"center\" bgcolor=\"#99ccff\">\r\n");
      out.write("			<td width=\"7%\">아이디</td>\r\n");
      out.write("			<td width=\"7%\">비밀번호</td>\r\n");
      out.write("			<td width=\"5%\">이름</td>\r\n");
      out.write("			<td width=\"11%\">이메일</td>\r\n");
      out.write("			<td width=\"5%\">가입일</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr align=\"center\">\r\n");
      out.write("			<!-- jsp:Property name=\"사용할 userBean의 id\"  property=\"bean에 저장된 속성명\"-->\r\n");
      out.write("			<!-- 속성에 해당하는 getter 메서드 실행 -->\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((sec01.ex01.MemberBean)_jspx_page_context.findAttribute("m")).getId())));
      out.write("</td>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((sec01.ex01.MemberBean)_jspx_page_context.findAttribute("m")).getPwd())));
      out.write("</td>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((sec01.ex01.MemberBean)_jspx_page_context.findAttribute("m")).getName())));
      out.write("</td>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((sec01.ex01.MemberBean)_jspx_page_context.findAttribute("m")).getEmail())));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
